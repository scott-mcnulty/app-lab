version: '3'

services:
  db:
    image: postgres
    restart: always
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: default
    volumes:
      - ./database/sql/create-tables.sql:/docker-entrypoint-initdb.d/create-tables.sql

  api:
    build:
      context: ./api
    ports:
      - "8080:8080"
    environment:
      ENVIRONMENT: "dev"
    depends_on:
      - db
    limits:
      cpus: '0.50'
      memory: 1000M
    reservations:
      cpus: '0.25'
      memory: 500M

  source-producer:
    build:
      context: ./sourceProducer
    ports:
      - "8090:8090"
    environment:
      ENVIRONMENT: "dev"
    depends_on:
      - kafka
    limits:
      cpus: '0.50'
      memory: 1000M
    reservations:
      cpus: '0.25'
      memory: 500M

  # processor:
  #   build:
  #     dockerfile: Dockerfile
  #     context: ./processor
  #   ports:
  #     - "9000:9000"
  #   environment:
  #     ENVIRONMENT: "dev"
  #   depends_on:
  #     - kafka
  #     - api
  #   limits:
  #     cpus: '0.50'
  #     memory: 1000M
  #   reservations:
  #     cpus: '0.25'
  #     memory: 500M

  adminer:
    image: adminer
    restart: always
    ports:
      - "8081:8080"

  prometheus:
    image: prom/prometheus
    ports:
      - "9090:9090"
    network_mode: "host"
    volumes:
      - ./prometheus/config.yml:/etc/prometheus/prometheus.yml
  
  zookeeper:
    image: wurstmeister/zookeeper
    restart: always
    ports:
      - "2181:2181"

  kafka:
    image: wurstmeister/kafka
    restart: always
    ports:
      - "9092:9092"
    environment:
      KAFKA_ADVERTISED_HOST_NAME: 172.17.0.1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_CREATE_TOPICS: "source-topic:1:1,dead-letter-topic:1:1"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

  kafka-exporter:
    image: danielqsj/kafka-exporter
    restart: always
    ports:
      - "9308:9308"
    depends_on:
      - kafka
    command: --kafka.server=172.17.0.1:9092